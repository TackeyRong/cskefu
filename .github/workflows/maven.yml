# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Aliyun Docker Registry
        uses: docker/login-action@v2
        with:
          registry: registry.cn-guangzhou.aliyuncs.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Contact Center Docker Image
        run: |
          cd $GITHUB_WORKSPACE/contact-center
          ./admin/build.sh

      - name: Push Contact Center Docker Image to DockerHub
        run: |
          cd $GITHUB_WORKSPACE/contact-center
          ./admin/push.sh

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Package Version
        id: get_version
        run: echo "PACKAGE_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Modify File
        run: |
          echo "Modifying file..."
          sed -i "s|^\(CC_IMAGE=.*:\).*$|\1${{ env.PACKAGE_VERSION }}|" ./.env

      - name: Commit changes
        run: |
          echo "Committing changes..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add ./.env
          git commit -m "Update CC_IMAGE value to ${{ env.PACKAGE_VERSION }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
